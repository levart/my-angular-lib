{"version":3,"file":"nodes.js","sourceRoot":"","sources":["../../../../src/lib/ng-package/nodes.ts"],"names":[],"mappings":";;;;;;AAqBA,oCAEC;AAED,8BAEC;AAED,oCAEC;AAED,wDAEC;AAED,kDAEC;AAED,0BAEC;AAED,kCAEC;AAED,sBAEC;AAjDD,4DAA4B;AAC5B,0DAAsD;AAEtD,wCAAqC;AACrC,4CAA+D;AAC/D,gFAA2E;AAK3E,MAAM,eAAe,GAAG,wBAAwB,CAAC;AACjD,MAAM,mBAAmB,GAAG,4BAA4B,CAAC;AAEzD,oDAAoD;AACpD,MAAM,iBAAiB,GAAG,SAAS,CAAC;AAEpC,kCAAkC;AAClC,MAAM,eAAe,GAAG,OAAO,CAAC;AAEhC,SAAgB,YAAY,CAAC,IAAU;IACrC,OAAO,IAAI,CAAC,IAAI,KAAK,mBAAmB,CAAC;AAC3C,CAAC;AAED,SAAgB,SAAS,CAAC,IAAU;IAClC,OAAO,IAAI,CAAC,IAAI,KAAK,eAAe,CAAC;AACvC,CAAC;AAED,SAAgB,YAAY;IAC1B,OAAO,IAAA,WAAE,EAAC,YAAY,CAAC,CAAC;AAC1B,CAAC;AAED,SAAgB,sBAAsB;IACpC,OAAO,IAAA,WAAE,EAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,IAAA,qBAAY,EAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AAED,SAAgB,mBAAmB;IACjC,OAAO,IAAA,WAAE,EAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,IAAA,kBAAS,EAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC;AAED,SAAgB,OAAO,CAAC,IAAY;IAClC,OAAO,GAAG,iBAAiB,GAAG,IAAI,EAAE,CAAC;AACvC,CAAC;AAED,SAAgB,WAAW,CAAC,GAAW;IACrC,OAAO,GAAG,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACxF,CAAC;AAED,SAAgB,KAAK,CAAC,IAAY;IAChC,OAAO,GAAG,eAAe,GAAG,IAAI,EAAE,CAAC;AACrC,CAAC;AAID,MAAa,cAAe,SAAQ,WAAI;IAGtC,YACkB,GAAW,EAC3B,gBAA2B,EAC3B,qBAA+C;QAE/C,KAAK,CAAC,GAAG,CAAC,CAAC;QAJK,QAAG,GAAH,GAAG,CAAQ;QAHpB,SAAI,GAAG,mBAAmB,CAAC;QASlC,IAAI,CAAC,KAAK,GAAG;YACX,gBAAgB;YAChB,wBAAwB,EAAE,IAAI,sBAAS,EAAE;YACzC,qBAAqB;YACrB,WAAW,EAAE,IAAI,GAAG,EAAE;YACtB,sBAAsB,EAAE,IAAI,mDAAuB,EAAE;SACtD,CAAC;IACJ,CAAC;CAqBF;AAtCD,wCAsCC;AAED,MAAa,WAAY,SAAQ,WAAI;IAArC;;QACW,SAAI,GAAG,eAAe,CAAC;QAGhC,UAAK,GAAG;YACN,gBAAgB,EAAE,IAAI,sBAAS,EAAE;YACjC,qBAAqB,EAAE,oBAAE,CAAC,2BAA2B,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7E,CAAC;IACJ,CAAC;CAAA;AARD,kCAQC","sourcesContent":["import type { NgtscProgram, ParsedConfiguration, Program } from '@angular/compiler-cli';\nimport type { RollupCache } from 'rollup';\nimport ts from 'typescript';\nimport { FileCache } from '../file-system/file-cache';\nimport { ComplexPredicate } from '../graph/build-graph';\nimport { Node } from '../graph/node';\nimport { by,  isInProgress, isPending } from '../graph/select';\nimport { AngularDiagnosticsCache } from '../ngc/angular-diagnostics-cache';\nimport { StylesheetProcessor } from '../styles/stylesheet-processor';\nimport { DestinationFiles, NgEntryPoint } from './entry-point/entry-point';\nimport { NgPackage } from './package';\n\nconst TYPE_NG_PACKAGE = 'application/ng-package';\nconst TYPE_NG_ENTRY_POINT = 'application/ng-entry-point';\n\n/** A node that can be read through the `fs` api. */\nconst URL_PROTOCOL_FILE = 'file://';\n\n/** A node specific to angular. */\nconst URL_PROTOCOL_NG = 'ng://';\n\nexport function isEntryPoint(node: Node): node is EntryPointNode {\n  return node.type === TYPE_NG_ENTRY_POINT;\n}\n\nexport function isPackage(node: Node): node is PackageNode {\n  return node.type === TYPE_NG_PACKAGE;\n}\n\nexport function byEntryPoint(): ComplexPredicate<EntryPointNode> {\n  return by(isEntryPoint);\n}\n\nexport function isEntryPointInProgress(): ComplexPredicate<EntryPointNode> {\n  return by(n => isEntryPoint(n) && isInProgress(n));\n}\n\nexport function isEntryPointPending(): ComplexPredicate<EntryPointNode> {\n  return by(n => isEntryPoint(n) && isPending(n));\n}\n\nexport function fileUrl(path: string): string {\n  return `${URL_PROTOCOL_FILE}${path}`;\n}\n\nexport function fileUrlPath(url: string): string | null {\n  return url.startsWith(URL_PROTOCOL_FILE) ? url.slice(URL_PROTOCOL_FILE.length) : null;\n}\n\nexport function ngUrl(path: string): string {\n  return `${URL_PROTOCOL_NG}${path}`;\n}\n\nexport type OutputFileCache = Map<string, { version?: string; content: string }>;\n\nexport class EntryPointNode extends Node {\n  readonly type = TYPE_NG_ENTRY_POINT;\n\n  constructor(\n    public readonly url: string,\n    sourcesFileCache: FileCache,\n    moduleResolutionCache: ts.ModuleResolutionCache,\n  ) {\n    super(url);\n\n    this.cache = {\n      sourcesFileCache,\n      analysesSourcesFileCache: new FileCache(),\n      moduleResolutionCache,\n      outputCache: new Map(),\n      angularDiagnosticCache: new AngularDiagnosticsCache(),\n    };\n  }\n\n  cache: {\n    outputCache: OutputFileCache;\n    oldPrograms?: Record<ts.ScriptTarget | 'analysis', Program | ts.Program>;\n    sourcesFileCache: FileCache;\n    analysesSourcesFileCache: FileCache;\n    moduleResolutionCache: ts.ModuleResolutionCache;\n    rollupFESM2022Cache?: RollupCache;\n    rollupTypesCache?: RollupCache;\n    stylesheetProcessor?: StylesheetProcessor;\n    oldNgtscProgram?: NgtscProgram;\n    oldBuilder?: ts.EmitAndSemanticDiagnosticsBuilderProgram;\n    angularDiagnosticCache: AngularDiagnosticsCache;\n  };\n\n  data: {\n    destinationFiles: DestinationFiles;\n    entryPoint: NgEntryPoint;\n    tsConfig?: ParsedConfiguration;\n  };\n}\n\nexport class PackageNode extends Node {\n  readonly type = TYPE_NG_PACKAGE;\n  data: NgPackage;\n\n  cache = {\n    sourcesFileCache: new FileCache(),\n    moduleResolutionCache: ts.createModuleResolutionCache(process.cwd(), s => s),\n  };\n}\n"]}